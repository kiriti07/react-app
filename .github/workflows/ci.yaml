name: CI/CD Pipeline

on: 
  push:
    branches:
      - main

jobs:
  test-build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies and run tests
      run: |
        npm install react-app-rewired --save-dev
        yarn install
        yarn add --dev jest-junit 
        yarn test

    - name: Archive Test Reports
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: test-reports
        path: test-reports/report.xml
    
    # Integrating Snyk for Vulnerability Scanning
    #- name: Run Snyk to check for vulnerabilities
     # uses: snyk/actions/node@0.3.0
      #env:
       # SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      #with:
       # args: --severity-threshold=high
       
    - name: Run yarn Tests
      run: yarn test 

    - name: Run Tests
      run: npm test

    - name: Check Test Report
      run: |
        if [ -f "test-reports/report.xml" ]; then
          if [ -s "test-reports/report.xml" ]; then
          echo "File exists and is not empty."
          cat test-reports/report.xml
          else
        echo "File exists but is empty."
        fi
        else
          echo "File does not exist."
        fi
      
    - name: Archive Test Reports
      if: always() # ensures this step is run even if the previous step (Run Tests) fails
      uses: actions/upload-artifact@v2
      with:
        name: test-reports
        path: test-reports/report.xml

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and push Docker image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: react-app
        IMAGE_TAG: ${{ startsWith(github.ref, 'refs/tags/') && github.ref || github.sha }}
      run: |
        echo "ECR_REGISTRY: $ECR_REGISTRY"
        echo "ECR_REPOSITORY: $ECR_REPOSITORY"
        echo "IMAGE_TAG: $IMAGE_TAG"
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
